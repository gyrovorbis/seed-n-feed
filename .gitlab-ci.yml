# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
#image: gcc
build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  # before_script: 
  #   - apt update && apt -y install make autoconf 
  #script: 
  #  - SERVER=http://freecams.dontexist.org:8081
  #  - USER=AdminGastly
  #  - APITOKEN=ee63cdf27a98791a20f66813bef8cb76
  #  - CRUMB=$(curl --user $USER:$APITOKEN $SERVER/crumbIssuer/api/xml?xpath=concat\(//crumbRequestField,%22:%22,//crumb\))
  #  - curl --user $USER:$APITOKEN -H "$CRUMB" -d "token=TEST" $SERVER/job/ESAssets_Debian_x64/build
  #  - curl --user $USER:$APITOKEN -H "$CRUMB" -d "token=TEST" $SERVER/job/ESAssets_MacOS/build
  script:
    - /usr/bin/knife upload --chef-repo-path . environments 
    - echo $GITLAB_USER_EMAIL
    - ruby jenkins_build.rb $GITLAB_USER_EMAIL
# run tests using the binary built before
#test:
#  stage: test
#  script:
/usr/bin/
#    - ./runmytests.sh
